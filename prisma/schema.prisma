
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  userId String @unique
  name String
  imageUrl String @db.Text
  email String @db.Text

  servers Server[]
  members Member[]
  channels Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Server {
  id String @id @default(uuid())
  name String
  imageUrl String @db.Text
  inviteCode String @unique

  userDataId String
  user User @relation(fields:[userDataId], references: [id], onDelete:Cascade)

  members Member[]
  channels Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userDataId])
}

enum MemberRole {  
  ADMIN
  MODERATOR
  GUEST
}

model Member {
  id String @id @default(uuid())
  role MemberRole @default(GUEST)

  userDataId String
  user User @relation(fields: [userDataId], references: [id], onDelete:Cascade)

  serverId String
  server Server @relation(fields: [serverId], references: [id] ,onDelete:Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userDataId])
  @@index([serverId])
}

enum ChannelType {
  TEXT
  AUDIO
  VIDEO
}

model Channel {
  id String @id @default(uuid())
  name String
  type ChannelType @default(TEXT)

  userDataId String
  user User @relation(fields: [userDataId], references: [id], onDelete:Cascade)

  serverId String
  server Server @relation(fields: [serverId], references: [id], onDelete:Cascade)  

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userDataId])
  @@index([serverId])
}